trigger:
- dev-main-db

pool:
  vmImage: ubuntu-latest

variables:
  JAVA_HOME: "/usr/lib/jvm/java-1.8.0-openjdk-amd64"  # Defina o caminho correto para o JDK 1.8

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    steps:
    - script: |
        echo "##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME)"
      displayName: 'Set JAVA_HOME'

    - script: 'mvn package -B -DskipTests=true'
      displayName: 'Build with Maven'
      workingDirectory: $(System.DefaultWorkingDirectory)

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: java-app-fiap'
            inputs:
              azureSubscription: 'Azure for Students(40e8f6d0-3344-46b2-b963-30ae2661fbae)'
              appType: webAppLinux
              appName: 'java-app-fiap'
              package: '$(Pipeline.Workspace)/drop/**/*.?(war|jar)'
              runtimeStack: 'JAVA|11-java11'
